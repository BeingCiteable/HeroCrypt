name: Release Pipeline

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 2.1.0)'
        required: true
        type: string
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        type: boolean
        default: false

permissions:
  contents: write

env:
  DOTNET_VERSION: '9.0.x'
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  CI: true

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: |
          6.0.x
          7.0.x
          8.0.x
          9.0.x
        
    - name: Validate version format
      run: |
        if ! [[ "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Version must be in format x.y.z"
          exit 1
        fi
        
    - name: Update version
      run: |
        # Update version in Directory.Build.props
        sed -i "s|<VersionPrefix>.*</VersionPrefix>|<VersionPrefix>${{ inputs.version }}</VersionPrefix>|g" Directory.Build.props
        
        # Also update AssemblyVersion (major.minor.0)
        VERSION_MAJOR_MINOR=$(echo "${{ inputs.version }}" | cut -d'.' -f1,2)
        sed -i "s|<AssemblyVersion>.*</AssemblyVersion>|<AssemblyVersion>${VERSION_MAJOR_MINOR}.0</AssemblyVersion>|g" Directory.Build.props
        
        # Commit version changes
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add Directory.Build.props
        git commit -m "Update version to ${{ inputs.version }}" || echo "No changes to commit"
        
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/Directory.Build.props') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Run RFC compliance tests
      run: |
        dotnet restore
        dotnet build --configuration Release
        dotnet test --filter "Category=Compliance" --configuration Release --logger "console;verbosity=detailed"
      env:
        CI: true
        
    - name: Generate release notes
      id: release_notes
      run: |
        cat <<'EOF' > release_notes.md
        ## HeroCrypt v${{ inputs.version }}

        ### Security & Compliance
        - Argon2 (RFC 9106): all compliance tests passing
        - Blake2b (RFC 7693): fully compliant

        ### Package Information
        - NuGet: [HeroCrypt ${{ inputs.version }}](https://www.nuget.org/packages/HeroCrypt/${{ inputs.version }})
        - Target Frameworks: .NET Standard 2.0, .NET 6.0, 7.0, 8.0, 9.0

        ### Installation
        ```bash
        dotnet add package HeroCrypt --version ${{ inputs.version }}
        ```
        EOF
        
    - name: Build and package
      run: |
        dotnet build --configuration Release --no-restore
        dotnet pack --configuration Release --no-build --output ./artifacts
      env:
        CI: true

    - name: Push version bump commit
      if: github.ref_type == 'branch'
      run: git push origin HEAD:${{ github.ref_name }}

    - name: Create Git tag
      run: |
        git tag -a "v${{ inputs.version }}" -m "Release v${{ inputs.version }}"
        git push origin "v${{ inputs.version }}"
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ inputs.version }}
        name: HeroCrypt v${{ inputs.version }}
        body_path: release_notes.md
        prerelease: ${{ inputs.prerelease }}
        files: |
          ./artifacts/*.nupkg
          ./artifacts/*.snupkg
        
    - name: Publish to NuGet
      if: ${{ !inputs.prerelease }}
      run: |
        dotnet nuget push "./artifacts/*.nupkg" \
          --api-key "${{ secrets.NUGET_API_KEY }}" \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate
